{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"home-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"folder-text\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"file-text\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.items, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"item\",\n      onClick: $event => $setup.handleItemClick(item)\n    }, [item.fileType === 'FOLDER' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Folder\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"File\")), _createTextVNode(\" \" + _toDisplayString(item.name) + \" \", 1 /* TEXT */), _createCommentVNode(\" Delete Button for Folders \"), $setup.currentFolderId !== 'home' && item.fileType === 'FOLDER' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: _withModifiers($event => $setup.deleteFolder(item.id), [\"stop\"])\n    }, \"Delete\", 8 /* PROPS */, _hoisted_5)) : $setup.currentFolderId !== 'home' && item.fileType !== 'FOLDER' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 3\n    }, [_createCommentVNode(\" Delete Button for Files \"), _createElementVNode(\"button\", {\n      onClick: _withModifiers($event => $setup.deleteFile(item.name), [\"stop\"])\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    multiple: \"\",\n    ref: \"selectedFiles\",\n    style: {\n      \"display\": \"none\"\n    },\n    onChange: $setup.uploadFiles\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$refs.selectedFiles.click())\n  }, \"Upload Files\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newFolderName = $event),\n    placeholder: \"Enter new folder name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newFolderName]]), _createElementVNode(\"button\", {\n    onClick: $setup.createFolder\n  }, \"Create Folder\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","items","item","key","id","onClick","$event","handleItemClick","fileType","_hoisted_3","_hoisted_4","_toDisplayString","name","_createCommentVNode","currentFolderId","_withModifiers","deleteFolder","_hoisted_5","_createElementVNode","deleteFile","_hoisted_6","type","multiple","ref","style","onChange","uploadFiles","_cache","_ctx","$refs","selectedFiles","click","newFolderName","placeholder","createFolder"],"sources":["/home/petarjankovic/Documents/GitHub/MediaServerFrontend/media-server-frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <div v-for=\"item in items\" :key=\"item.id\" class=\"item\" @click=\"handleItemClick(item)\">\n      <span v-if=\"item.fileType === 'FOLDER'\" class=\"folder-text\">Folder</span>\n      <span v-else class=\"file-text\">File</span>\n      {{ item.name }}\n      \n      <!-- Delete Button for Folders -->\n      <button \n        v-if=\"currentFolderId !== 'home' && item.fileType === 'FOLDER'\" \n        @click.stop=\"deleteFolder(item.id)\"\n      >Delete</button>\n\n      <!-- Delete Button for Files -->\n      <button \n        v-else-if=\"currentFolderId !== 'home' && item.fileType !== 'FOLDER'\" \n        @click.stop=\"deleteFile(item.name)\"\n      >Delete</button>\n    </div>\n    \n    <input type=\"file\" multiple ref=\"selectedFiles\" style=\"display: none\" @change=\"uploadFiles\"/>\n    <button @click=\"$refs.selectedFiles.click()\">Upload Files</button>\n    <input type=\"text\" v-model=\"newFolderName\" placeholder=\"Enter new folder name\" />\n    <button @click=\"createFolder\">Create Folder</button>\n  </div>\n</template>\n\n\n\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faFolder, faFile);\nconst route = useRoute();\nconst router = useRouter();\nconst items = ref([]);\nconst currentFolderId = ref('home');\nconst selectedFiles = ref(null);\nconst newFolderName = ref('');\n\nonMounted(() => {\n  // Initial fetch\n  if(route.params.folderId) {\n    currentFolderId.value = route.params.folderId;\n    fetchFolderItems(currentFolderId.value);\n  } else {\n    fetchMainFolder();\n  }\n});\n\nwatch(() => route.params.folderId, async (newFolderId) => {\n  console.log(\"Route has changed:\", newFolderId);\n  if (newFolderId) {\n    currentFolderId.value = newFolderId;\n    await fetchFolderItems(newFolderId);\n  } else {\n    fetchMainFolder();\n  }\n});\n\nconst fetchMainFolder = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('http://192.168.0.18:8081/folder/all', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \n      }\n    });\n    \n    currentFolderId.value = Object.keys(response.data)[0];\n    \n    items.value = response.data[currentFolderId.value];\n  } catch (error) {\n    console.error(\"Error fetching main folder:\", error);\n  }\n};\n\nconst handleItemClick = (item) => {\n  if (item.fileType === 'FOLDER') {\n    currentFolderId.value = item.id;\n    fetchFolderItems(item.id);\n    router.push(`/home/${item.id}`);  \n  }\n};\n\nconst fetchFolderItems = async (folderId) => {\n  console.log(\"Fetching folder items for:\", folderId);\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get(`http://192.168.0.18:8081/folder/files/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    currentFolderId.value = Object.keys(response.data)[0];\n    items.value = response.data[currentFolderId.value];\n  } catch (error) {\n    console.error(\"Error fetching folder items:\", error);\n  }\n};\n\nconst deleteFolder = async (folderId) => {\n  const token = localStorage.getItem('token');\n  try {\n    await axios.delete(`http://192.168.0.18:8081/folder/delete/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n  } catch (error) {\n    console.error(\"Error deleting folder:\", error);\n  }\n};\nconst deleteFile = async (fileName) => {\n  const token = localStorage.getItem('token');\n  try {\n    await axios.delete(`http://192.168.0.18:8081/file/delete`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        fileName: fileName,\n        folderId: currentFolderId.value\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n  } catch (error) {\n    console.error(\"Error deleting file:\", error);\n  }\n};\n\nconst uploadFiles = async () => {\n    const filesToUpload = selectedFiles.value.files;\n\n\n    if (!filesToUpload || filesToUpload.length === 0) return;\n\n    const formData = new FormData();    \n    for (let i = 0; i < filesToUpload.length; i++) {\n        formData.append(\"files\", filesToUpload[i]);\n        console.log(filesToUpload[i]);\n    }\n    formData.append(\"folderId\", currentFolderId.value);\n    console.log(formData);\n\n    const token = localStorage.getItem('token');\n\n    try {\n        await axios.post('http://192.168.0.18:8081/file/upload', formData, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            }\n        });\n        fetchFolderItems(currentFolderId.value);\n    } catch (error) {\n        console.error(\"Error uploading files:\", error);\n    }\n};\n\nconst createFolder = async () => {\n    if (!newFolderName.value) return;\n\n    const token = localStorage.getItem('token');\n\n    try {\n        await axios.post('http://192.168.0.18:8081/folder/create', {\n            name: newFolderName.value,\n            folderId: currentFolderId.value\n        }, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        fetchFolderItems(currentFolderId.value);\n    } catch (error) {\n        console.error(\"Error creating folder:\", error);\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.home-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    max-width: 1000px;\n    margin: 0 auto;\n    background-color: #f7f7f7;\n    border-radius: 8px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n\n    .item {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        max-width: 500px;\n        background-color: #ffffff;\n        border: 1px solid #e0e0e0;\n        border-radius: 4px;\n        padding: 10px;\n        margin: 10px 0;\n        cursor: pointer;\n        transition: background-color 0.3s, box-shadow 0.3s;\n\n        &:hover {\n            background-color: #f5f5f5;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        }\n\n        .folder-text,\n        .file-text {\n            font-size: 1.2em;\n            font-weight: 600;\n            margin-right: 15px;\n        }\n\n        .folder-text {\n            color: red;\n        }\n\n        .file-text {\n            color: blue;\n        }\n\n        button {\n            margin-left: auto;\n            padding: 5px 10px;\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s;\n\n            &:hover {\n                background-color: #45a049;\n            }\n        }\n    }\n\n    input[type=\"file\"],\n    input[type=\"text\"] {\n        margin-top: 15px;\n        padding: 10px;\n        border: 1px solid #dcdcdc;\n        border-radius: 4px;\n        outline: none;\n\n        &:focus {\n            border-color: #aaa;\n        }\n    }\n\n    button {\n        margin-top: 15px;\n        padding: 10px 15px;\n        background-color: #333;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        transition: background-color 0.3s;\n\n        &:hover {\n            background-color: #555;\n        }\n    }\n\n    // Move Modal Styles\n    .move-modal {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      padding: 20px;\n      background-color: white;\n      border: 1px solid #dcdcdc;\n      border-radius: 8px;\n      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n      z-index: 1000;\n      max-width: 400px;\n\n      h3 {\n        margin-bottom: 15px;\n      }\n\n      .folder-option {\n        padding: 10px;\n        border: 1px solid #dcdcdc;\n        border-radius: 4px;\n        margin-bottom: 10px;\n        cursor: pointer;\n        transition: background-color 0.2s;\n\n        &:hover {\n          background-color: #f5f5f5;\n        }\n      }\n    }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;;;EAEiBA,KAAK,EAAC;;;;EACjCA,KAAK,EAAC;;;;;uBAHvBC,mBAAA,CAuBM,OAvBNC,UAuBM,I,kBAtBJD,mBAAA,CAgBME,SAAA,QAAAC,WAAA,CAhBcC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBN,mBAAA,CAgBM;MAhBsBO,GAAG,EAAED,IAAI,CAACE,EAAE;MAAET,KAAK,EAAC,MAAM;MAAEU,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,eAAe,CAACL,IAAI;QACrEA,IAAI,CAACM,QAAQ,iB,cAAzBZ,mBAAA,CAAyE,QAAzEa,UAAyE,EAAb,QAAM,M,cAClEb,mBAAA,CAA0C,QAA1Cc,UAA0C,EAAX,MAAI,I,iBAAO,GAC1C,GAAAC,gBAAA,CAAGT,IAAI,CAACU,IAAI,IAAG,GAEf,iBAAAC,mBAAA,+BAAkC,EAE1Bb,MAAA,CAAAc,eAAe,eAAeZ,IAAI,CAACM,QAAQ,iB,cADnDZ,mBAAA,CAGgB;;MADbS,OAAK,EAAAU,cAAA,CAAAT,MAAA,IAAON,MAAA,CAAAgB,YAAY,CAACd,IAAI,CAACE,EAAE;OAClC,QAAM,iBAAAa,UAAA,KAIMjB,MAAA,CAAAc,eAAe,eAAeZ,IAAI,CAACM,QAAQ,iB,cADxDZ,mBAAA,CAGgBE,SAAA;MAAAK,GAAA;IAAA,IAJhBU,mBAAA,6BAAgC,EAChCK,mBAAA,CAGgB;MADbb,OAAK,EAAAU,cAAA,CAAAT,MAAA,IAAON,MAAA,CAAAmB,UAAU,CAACjB,IAAI,CAACU,IAAI;OAClC,QAAM,iBAAAQ,UAAA,E;kCAGTF,mBAAA,CAA6F;IAAtFG,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;IAACC,GAAG,EAAC,eAAe;IAACC,KAAqB,EAArB;MAAA;IAAA,CAAqB;IAAEC,QAAM,EAAEzB,MAAA,CAAA0B;kDAC/ER,mBAAA,CAAkE;IAAzDb,OAAK,EAAAsB,MAAA,QAAAA,MAAA,MAAArB,MAAA,IAAEsB,IAAA,CAAAC,KAAK,CAACC,aAAa,CAACC,KAAK;KAAI,cAAY,G,gBACzDb,mBAAA,CAAiF;IAA1EG,IAAI,EAAC,MAAM;+DAAUrB,MAAA,CAAAgC,aAAa,GAAA1B,MAAA;IAAE2B,WAAW,EAAC;iDAA3BjC,MAAA,CAAAgC,aAAa,E,GACzCd,mBAAA,CAAoD;IAA3Cb,OAAK,EAAEL,MAAA,CAAAkC;EAAY,GAAE,eAAa,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}