{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9ea40744\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"home-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  class: \"folder-text\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"file-text\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"move-modal\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Select Target Folder\", -1 /* HOISTED */));\nconst _hoisted_10 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.items, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id,\n      class: \"item\",\n      onClick: $event => $setup.handleItemClick(item)\n    }, [item.fileType === 'FOLDER' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Folder\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"File\")), _createTextVNode(\" \" + _toDisplayString(item.name) + \" \", 1 /* TEXT */), $setup.isMoving && item.fileType !== 'FOLDER' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 2,\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedItems = $event),\n      value: item.id\n    }, null, 8 /* PROPS */, _hoisted_5)), [[_vModelCheckbox, $setup.selectedItems]]) : _createCommentVNode(\"v-if\", true), $setup.currentFolderId !== 'home' && item.fileType === 'FOLDER' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 3,\n      onClick: _withModifiers($event => $setup.deleteFolder(item.id), [\"stop\"])\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)) : $setup.currentFolderId !== 'home' && item.fileType !== 'FOLDER' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 4,\n      onClick: _withModifiers($event => $setup.deleteFile(item.name), [\"stop\"])\n    }, \"Delete\", 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), $setup.moveModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.folderItems, folder => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: folder.id,\n      class: \"folder-option\",\n      onClick: $event => $setup.handleFolderClick(folder.id, folder)\n    }, _toDisplayString(folder.name), 9 /* TEXT, PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: $setup.confirmMove\n  }, \"Confirm Move\"), _createElementVNode(\"button\", {\n    onClick: $setup.cancelMove\n  }, \"Cancel\")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n    type: \"file\",\n    multiple: \"\",\n    ref: \"selectedFiles\",\n    style: {\n      \"display\": \"none\"\n    },\n    onChange: $setup.uploadFiles\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$refs.selectedFiles.click())\n  }, \"Upload Files\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newFolderName = $event),\n    placeholder: \"Enter new folder name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newFolderName]]), _createElementVNode(\"button\", {\n    onClick: $setup.createFolder\n  }, \"Create Folder\"), _createElementVNode(\"button\", {\n    onClick: $setup.initiateMove\n  }, \"Move\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","items","item","key","id","onClick","$event","handleItemClick","fileType","_hoisted_3","_hoisted_4","_toDisplayString","name","isMoving","type","selectedItems","value","currentFolderId","_withModifiers","deleteFolder","_hoisted_6","deleteFile","_hoisted_7","moveModalVisible","_hoisted_8","_hoisted_9","folderItems","folder","handleFolderClick","_hoisted_10","confirmMove","cancelMove","multiple","ref","style","onChange","uploadFiles","_cache","_ctx","$refs","selectedFiles","click","newFolderName","placeholder","createFolder","initiateMove"],"sources":["/home/petarjankovic/Documents/GitHub/MediaServerFrontend/media-server-frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <div v-for=\"item in items\" :key=\"item.id\" class=\"item\" @click=\"handleItemClick(item)\">\n      <span v-if=\"item.fileType === 'FOLDER'\" class=\"folder-text\">Folder</span>\n      <span v-else class=\"file-text\">File</span>\n      {{ item.name }}\n\n      <input \n        type=\"checkbox\" \n        v-if=\"isMoving && item.fileType !== 'FOLDER'\" \n        v-model=\"selectedItems\" \n        :value=\"item.id\"\n      />\n\n      <button \n        v-if=\"currentFolderId !== 'home' && item.fileType === 'FOLDER'\" \n        @click.stop=\"deleteFolder(item.id)\"\n      >Delete</button>\n\n      <button \n        v-else-if=\"currentFolderId !== 'home' && item.fileType !== 'FOLDER'\" \n        @click.stop=\"deleteFile(item.name)\"\n      >Delete</button>\n    </div>\n\n    <div v-if=\"moveModalVisible\" class=\"move-modal\">\n      <h3>Select Target Folder</h3>\n      <div \n        v-for=\"folder in folderItems\" \n        :key=\"folder.id\" \n        class=\"folder-option\" \n        @click=\"handleFolderClick(folder.id, folder)\"\n      >\n        {{ folder.name }}\n      </div>\n      <button @click=\"confirmMove\">Confirm Move</button>\n      <button @click=\"cancelMove\">Cancel</button>\n    </div>\n\n    <input type=\"file\" multiple ref=\"selectedFiles\" style=\"display: none\" @change=\"uploadFiles\"/>\n    <button @click=\"$refs.selectedFiles.click()\">Upload Files</button>\n    <input type=\"text\" v-model=\"newFolderName\" placeholder=\"Enter new folder name\" />\n    <button @click=\"createFolder\">Create Folder</button>\n    <button @click=\"initiateMove\">Move</button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faFolder, faFile);\nconst route = useRoute();\nconst router = useRouter();\nconst items = ref([]);\nconst currentFolderId = ref('home');\nconst selectedFiles = ref(null);\nconst newFolderName = ref('');\nconst isMoving = ref(false);\nconst selectedItems = ref([]);\nconst moveModalVisible = ref(false);\nconst targetFolderId = ref('');\nconst folderItems = ref([]);\n\nonMounted(() => {\n  if(route.params.folderId) {\n    currentFolderId.value = route.params.folderId;\n    fetchFolderItems(currentFolderId.value);\n  } else {\n    fetchMainFolder();\n  }\n});\n\nwatch(() => route.params.folderId, async (newFolderId) => {\n  if (newFolderId) {\n    currentFolderId.value = newFolderId;\n    await fetchFolderItems(newFolderId);\n  } else {\n    fetchMainFolder();\n  }\n});\n\nconst fetchMainFolder = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('http://192.168.0.18:8081/folder/all', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \n      }\n    });\n    \n    currentFolderId.value = Object.keys(response.data)[0];\n    \n    items.value = response.data[currentFolderId.value];\n  } catch (error) {\n    console.error(\"Error fetching main folder:\", error);\n  }\n};\n\nconst handleItemClick = (item) => {\n  if (item.fileType === 'FOLDER') {\n    if (isMoving.value) {\n      // If in move mode, set the target folder ID but don't navigate away.\n      targetFolderId.value = item.id;\n      // Fetch the items within the folder to allow for deeper navigation.\n      fetchFolderItemsForMove(item.id);\n    } else {\n      currentFolderId.value = item.id;\n      fetchFolderItems(item.id);\n      router.push(`/home/${item.id}`);\n    }\n  }\n};\nconst handleFolderClick = (folderId, folder) => {\n    setTargetFolder(folderId);\n    handleItemClick(folder);\n};\n\nconst showErrorPopup = (error) => {\n  if (error.response && error.response.data) {\n    const { exception, message, code } = error.response.data;\n    // Here you can use whatever method you're using to display popups.\n    alert(`Error: ${exception}\\nMessage: ${message}\\nCode: ${code}`);\n  } else {\n    alert(\"An unexpected error occurred.\");\n  }\n};\nconst fetchFolderItems = async (folderId) => {\n  console.log(\"Fetching folder items for:\", folderId);\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get(`http://192.168.0.18:8081/folder/files/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    currentFolderId.value = Object.keys(response.data)[0];\n    items.value = response.data[currentFolderId.value];\n  } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst deleteFolder = async (folderId) => {\n  const token = localStorage.getItem('token');\n  try {\n    await axios.delete(`http://192.168.0.18:8081/folder/delete/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n  } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\nconst deleteFile = async (fileName) => {\n  const token = localStorage.getItem('token');\n  try {\n    await axios.delete(`http://192.168.0.18:8081/file/delete`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        fileName: fileName,\n        folderId: currentFolderId.value\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n  } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst uploadFiles = async () => {\n    const filesToUpload = selectedFiles.value.files;\n\n\n    if (!filesToUpload || filesToUpload.length === 0) return;\n\n    const formData = new FormData();    \n    for (let i = 0; i < filesToUpload.length; i++) {\n        formData.append(\"files\", filesToUpload[i]);\n        console.log(filesToUpload[i]);\n    }\n    formData.append(\"folderId\", currentFolderId.value);\n    console.log(formData);\n\n    const token = localStorage.getItem('token');\n\n    try {\n        await axios.post('http://192.168.0.18:8081/file/upload', formData, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            }\n        });\n        fetchFolderItems(currentFolderId.value);\n    } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst createFolder = async () => {\n    if (!newFolderName.value) return;\n\n    const token = localStorage.getItem('token');\n\n    try {\n        await axios.post('http://192.168.0.18:8081/folder/create', {\n            name: newFolderName.value,\n            folderId: currentFolderId.value\n        }, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        fetchFolderItems(currentFolderId.value);\n    } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst initiateMove = () => {\n  fetchMainFolderForMove();\n  argetFolderId.value = 'home';\n  isMoving.value = true;\n  moveModalVisible.value = true;\n};\n\nconst confirmMove = async () => {\n  if (!selectedItems.value.length || !targetFolderId.value) {\n    console.error(\"No items selected or target folder not set for move!\");\n    return;\n  }\n  const filesToMove = selectedItems.value.join(',');\n\n  const token = localStorage.getItem('token');\n\n  try {\n    await axios.put('http://192.168.0.18:8081/file/move', null, {\n      params: {\n        files: filesToMove,\n        currentFolder: currentFolderId.value,\n        newFolder: targetFolderId.value\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n    isMoving.value = false;\n    moveModalVisible.value = false;\n  } catch (error) {\n      console.error(\"Error moving files:\", error);\n      showErrorPopup(error);\n  }\n};\n\n\nconst setTargetFolder = (folderId) => {\n  targetFolderId.value = folderId;\n  console.log(targetFolderId);\n};\nconst fetchMainFolderForMove = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('http://192.168.0.18:8081/folder/all', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    });\n\n    // Extract all folders from the returned data\n    let allFolders = [];\n    for (let key in response.data) {\n      allFolders = allFolders.concat(response.data[key].filter(item => item.fileType === 'FOLDER'));\n    }\n    \n    folderItems.value = allFolders;\n    console.log(allFolders);\n    \n  } catch (error) {\n    console.error(\"Error fetching main folder for move:\", error);\n    showErrorPopup(error);\n  }\n};\nconst fetchFolderItemsForMove = async (folderId) => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get(`http://192.168.0.18:8081/folder/files/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    // Filter only the folders.\n    folderItems.value = response.data[Object.keys(response.data)[0]].filter(item => item.fileType === 'FOLDER');\n  } catch (error) {\n    console.error(\"Error fetching folder items for move:\", error);\n    showErrorPopup(error);\n  }\n};\n\nconst cancelMove = () => {\n  moveModalVisible.value = false;\n  isMoving.value = false;\n  selectedItems.value = [];\n  targetFolderId.value = '';\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.home-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    max-width: 1000px;\n    margin: 0 auto;\n    background-color: #f7f7f7;\n    border-radius: 8px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n\n    .item {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        max-width: 500px;\n        background-color: #ffffff;\n        border: 1px solid #e0e0e0;\n        border-radius: 4px;\n        padding: 10px;\n        margin: 10px 0;\n        cursor: pointer;\n        transition: background-color 0.3s, box-shadow 0.3s;\n\n        &:hover {\n            background-color: #f5f5f5;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        }\n\n        .folder-text,\n        .file-text {\n            font-size: 1.2em;\n            font-weight: 600;\n            margin-right: 15px;\n        }\n\n        .folder-text {\n            color: red;\n        }\n\n        .file-text {\n            color: blue;\n        }\n\n        button {\n            margin-left: auto;\n            padding: 5px 10px;\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s;\n\n            &:hover {\n                background-color: #45a049;\n            }\n        }\n    }\n\n    input[type=\"file\"],\n    input[type=\"text\"] {\n        margin-top: 15px;\n        padding: 10px;\n        border: 1px solid #dcdcdc;\n        border-radius: 4px;\n        outline: none;\n\n        &:focus {\n            border-color: #aaa;\n        }\n    }\n\n    button {\n        margin-top: 15px;\n        padding: 10px 15px;\n        background-color: #333;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        transition: background-color 0.3s;\n\n        &:hover {\n            background-color: #555;\n        }\n    }\n\n    // Move Modal Styles\n    .move-modal {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      padding: 20px;\n      background-color: white;\n      border: 1px solid #dcdcdc;\n      border-radius: 8px;\n      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n      z-index: 1000;\n      max-width: 400px;\n\n      h3 {\n        margin-bottom: 15px;\n      }\n\n      .folder-option {\n        padding: 10px;\n        border: 1px solid #dcdcdc;\n        border-radius: 4px;\n        margin-bottom: 10px;\n        cursor: pointer;\n        transition: background-color 0.2s;\n\n        &:hover {\n          background-color: #f5f5f5;\n        }\n      }\n    }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}