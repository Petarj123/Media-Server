{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\nexport default {\n  __name: 'HomeView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    library.add(faFolder, faFile);\n    const route = useRoute();\n    const router = useRouter();\n    const items = ref([]);\n    const currentFolderId = ref('home');\n    const selectedFiles = ref(null);\n    const newFolderName = ref('');\n    const isMoving = ref(false);\n    const selectedItems = ref([]);\n    const moveModalVisible = ref(false);\n    const targetFolderId = ref('');\n    const folderItems = ref([]);\n    onMounted(() => {\n      if (route.params.folderId) {\n        currentFolderId.value = route.params.folderId;\n        fetchFolderItems(currentFolderId.value);\n      } else {\n        fetchMainFolder();\n      }\n    });\n    watch(() => route.params.folderId, async newFolderId => {\n      if (newFolderId) {\n        currentFolderId.value = newFolderId;\n        await fetchFolderItems(newFolderId);\n      } else {\n        fetchMainFolder();\n      }\n    });\n    const fetchMainFolder = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get('http://192.168.0.18:8081/folder/all', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        currentFolderId.value = Object.keys(response.data)[0];\n        items.value = response.data[currentFolderId.value];\n      } catch (error) {\n        console.error(\"Error fetching main folder:\", error);\n      }\n    };\n    const handleItemClick = item => {\n      if (item.fileType === 'FOLDER') {\n        if (isMoving.value) {\n          // If in move mode, set the target folder ID but don't navigate away.\n          targetFolderId.value = item.id;\n          // Fetch the items within the folder to allow for deeper navigation.\n          fetchFolderItemsForMove(item.id);\n        } else {\n          currentFolderId.value = item.id;\n          fetchFolderItems(item.id);\n          router.push(`/home/${item.id}`);\n        }\n      }\n    };\n    const handleFolderClick = (folderId, folder) => {\n      setTargetFolder(folderId);\n      handleItemClick(folder);\n    };\n    const showErrorPopup = error => {\n      if (error.response && error.response.data) {\n        const {\n          exception,\n          message,\n          code\n        } = error.response.data;\n        // Here you can use whatever method you're using to display popups.\n        alert(`Error: ${exception}\\nMessage: ${message}\\nCode: ${code}`);\n      } else {\n        alert(\"An unexpected error occurred.\");\n      }\n    };\n    const fetchFolderItems = async folderId => {\n      console.log(\"Fetching folder items for:\", folderId);\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get(`http://192.168.0.18:8081/folder/files/${folderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        currentFolderId.value = Object.keys(response.data)[0];\n        items.value = response.data[currentFolderId.value];\n      } catch (error) {\n        console.error(\"Error fetching folder items:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const deleteFolder = async folderId => {\n      const token = localStorage.getItem('token');\n      try {\n        await axios.delete(`http://192.168.0.18:8081/folder/delete/${folderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        fetchFolderItems(currentFolderId.value);\n      } catch (error) {\n        console.error(\"Error fetching folder items:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const deleteFile = async fileName => {\n      const token = localStorage.getItem('token');\n      try {\n        await axios.delete(`http://192.168.0.18:8081/file/delete`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          params: {\n            fileName: fileName,\n            folderId: currentFolderId.value\n          }\n        });\n        fetchFolderItems(currentFolderId.value);\n      } catch (error) {\n        console.error(\"Error fetching folder items:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const uploadFiles = async () => {\n      const filesToUpload = selectedFiles.value.files;\n      if (!filesToUpload || filesToUpload.length === 0) return;\n      const formData = new FormData();\n      for (let i = 0; i < filesToUpload.length; i++) {\n        formData.append(\"files\", filesToUpload[i]);\n        console.log(filesToUpload[i]);\n      }\n      formData.append(\"folderId\", currentFolderId.value);\n      console.log(formData);\n      const token = localStorage.getItem('token');\n      try {\n        await axios.post('http://192.168.0.18:8081/file/upload', formData, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        fetchFolderItems(currentFolderId.value);\n      } catch (error) {\n        console.error(\"Error fetching folder items:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const createFolder = async () => {\n      if (!newFolderName.value) return;\n      const token = localStorage.getItem('token');\n      try {\n        await axios.post('http://192.168.0.18:8081/folder/create', {\n          name: newFolderName.value,\n          folderId: currentFolderId.value\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        fetchFolderItems(currentFolderId.value);\n      } catch (error) {\n        console.error(\"Error fetching folder items:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const initiateMove = () => {\n      fetchMainFolderForMove();\n      isMoving.value = true;\n      moveModalVisible.value = true;\n    };\n    const confirmMove = async () => {\n      if (!selectedItems.value.length || !targetFolderId.value) {\n        console.error(\"No items selected or target folder not set for move!\");\n        return;\n      }\n      const filesToMove = selectedItems.value.join(',');\n      const token = localStorage.getItem('token');\n      try {\n        await axios.put('http://192.168.0.18:8081/file/move', null, {\n          params: {\n            files: filesToMove,\n            currentFolder: currentFolderId.value,\n            newFolder: targetFolderId.value\n          },\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        fetchFolderItems(currentFolderId.value);\n        isMoving.value = false;\n        moveModalVisible.value = false;\n      } catch (error) {\n        console.error(\"Error moving files:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const setTargetFolder = folderId => {\n      targetFolderId.value = folderId;\n      console.log(targetFolderId);\n    };\n    const fetchMainFolderForMove = async () => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get('http://192.168.0.18:8081/folder/all', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Extract all folders from the returned data\n        let allFolders = [];\n        for (let key in response.data) {\n          allFolders = allFolders.concat(response.data[key].filter(item => item.fileType === 'FOLDER'));\n        }\n        folderItems.value = allFolders;\n        console.log(allFolders);\n      } catch (error) {\n        console.error(\"Error fetching main folder for move:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const fetchFolderItemsForMove = async folderId => {\n      const token = localStorage.getItem('token');\n      try {\n        const response = await axios.get(`http://192.168.0.18:8081/folder/files/${folderId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        // Filter only the folders.\n        folderItems.value = response.data[Object.keys(response.data)[0]].filter(item => item.fileType === 'FOLDER');\n      } catch (error) {\n        console.error(\"Error fetching folder items for move:\", error);\n        showErrorPopup(error);\n      }\n    };\n    const cancelMove = () => {\n      moveModalVisible.value = false;\n      isMoving.value = false;\n      selectedItems.value = [];\n      targetFolderId.value = '';\n    };\n    const __returned__ = {\n      route,\n      router,\n      items,\n      currentFolderId,\n      selectedFiles,\n      newFolderName,\n      isMoving,\n      selectedItems,\n      moveModalVisible,\n      targetFolderId,\n      folderItems,\n      fetchMainFolder,\n      handleItemClick,\n      handleFolderClick,\n      showErrorPopup,\n      fetchFolderItems,\n      deleteFolder,\n      deleteFile,\n      uploadFiles,\n      createFolder,\n      initiateMove,\n      confirmMove,\n      setTargetFolder,\n      fetchMainFolderForMove,\n      fetchFolderItemsForMove,\n      cancelMove,\n      ref,\n      onMounted,\n      watch,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get library() {\n        return library;\n      },\n      get faFolder() {\n        return faFolder;\n      },\n      get faFile() {\n        return faFile;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","useRoute","useRouter","axios","library","faFolder","faFile","add","route","router","items","currentFolderId","selectedFiles","newFolderName","isMoving","selectedItems","moveModalVisible","targetFolderId","folderItems","params","folderId","value","fetchFolderItems","fetchMainFolder","newFolderId","token","localStorage","getItem","response","get","headers","Authorization","Object","keys","data","error","console","handleItemClick","item","fileType","id","fetchFolderItemsForMove","push","handleFolderClick","folder","setTargetFolder","showErrorPopup","exception","message","code","alert","log","deleteFolder","delete","deleteFile","fileName","uploadFiles","filesToUpload","files","length","formData","FormData","i","append","post","createFolder","name","initiateMove","fetchMainFolderForMove","confirmMove","filesToMove","join","put","currentFolder","newFolder","allFolders","key","concat","filter","cancelMove"],"sources":["/home/petarjankovic/Documents/GitHub/MediaServerFrontend/media-server-frontend/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <div v-for=\"item in items\" :key=\"item.id\" class=\"item\" @click=\"handleItemClick(item)\">\n      <span v-if=\"item.fileType === 'FOLDER'\" class=\"folder-text\">Folder</span>\n      <span v-else class=\"file-text\">File</span>\n      {{ item.name }}\n\n      <input \n        type=\"checkbox\" \n        v-if=\"isMoving && item.fileType !== 'FOLDER'\" \n        v-model=\"selectedItems\" \n        :value=\"item.id\"\n      />\n\n      <button \n        v-if=\"currentFolderId !== 'home' && item.fileType === 'FOLDER'\" \n        @click.stop=\"deleteFolder(item.id)\"\n      >Delete</button>\n\n      <button \n        v-else-if=\"currentFolderId !== 'home' && item.fileType !== 'FOLDER'\" \n        @click.stop=\"deleteFile(item.name)\"\n      >Delete</button>\n    </div>\n\n    <div v-if=\"moveModalVisible\" class=\"move-modal\">\n      <h3>Select Target Folder</h3>\n      <div \n        v-for=\"folder in folderItems\" \n        :key=\"folder.id\" \n        class=\"folder-option\" \n        @click=\"handleFolderClick(folder.id, folder)\"\n      >\n        {{ folder.name }}\n      </div>\n      <button @click=\"confirmMove\">Confirm Move</button>\n      <button @click=\"cancelMove\">Cancel</button>\n    </div>\n\n    <input type=\"file\" multiple ref=\"selectedFiles\" style=\"display: none\" @change=\"uploadFiles\"/>\n    <button @click=\"$refs.selectedFiles.click()\">Upload Files</button>\n    <input type=\"text\" v-model=\"newFolderName\" placeholder=\"Enter new folder name\" />\n    <button @click=\"createFolder\">Create Folder</button>\n    <button @click=\"initiateMove\">Move</button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faFolder, faFile } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faFolder, faFile);\nconst route = useRoute();\nconst router = useRouter();\nconst items = ref([]);\nconst currentFolderId = ref('home');\nconst selectedFiles = ref(null);\nconst newFolderName = ref('');\nconst isMoving = ref(false);\nconst selectedItems = ref([]);\nconst moveModalVisible = ref(false);\nconst targetFolderId = ref('');\nconst folderItems = ref([]);\n\nonMounted(() => {\n  if(route.params.folderId) {\n    currentFolderId.value = route.params.folderId;\n    fetchFolderItems(currentFolderId.value);\n  } else {\n    fetchMainFolder();\n  }\n});\n\nwatch(() => route.params.folderId, async (newFolderId) => {\n  if (newFolderId) {\n    currentFolderId.value = newFolderId;\n    await fetchFolderItems(newFolderId);\n  } else {\n    fetchMainFolder();\n  }\n});\n\nconst fetchMainFolder = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('http://192.168.0.18:8081/folder/all', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \n      }\n    });\n    \n    currentFolderId.value = Object.keys(response.data)[0];\n    \n    items.value = response.data[currentFolderId.value];\n  } catch (error) {\n    console.error(\"Error fetching main folder:\", error);\n  }\n};\n\nconst handleItemClick = (item) => {\n  if (item.fileType === 'FOLDER') {\n    if (isMoving.value) {\n      // If in move mode, set the target folder ID but don't navigate away.\n      targetFolderId.value = item.id;\n      // Fetch the items within the folder to allow for deeper navigation.\n      fetchFolderItemsForMove(item.id);\n    } else {\n      currentFolderId.value = item.id;\n      fetchFolderItems(item.id);\n      router.push(`/home/${item.id}`);\n    }\n  }\n};\nconst handleFolderClick = (folderId, folder) => {\n    setTargetFolder(folderId);\n    handleItemClick(folder);\n};\n\nconst showErrorPopup = (error) => {\n  if (error.response && error.response.data) {\n    const { exception, message, code } = error.response.data;\n    // Here you can use whatever method you're using to display popups.\n    alert(`Error: ${exception}\\nMessage: ${message}\\nCode: ${code}`);\n  } else {\n    alert(\"An unexpected error occurred.\");\n  }\n};\nconst fetchFolderItems = async (folderId) => {\n  console.log(\"Fetching folder items for:\", folderId);\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get(`http://192.168.0.18:8081/folder/files/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    currentFolderId.value = Object.keys(response.data)[0];\n    items.value = response.data[currentFolderId.value];\n  } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst deleteFolder = async (folderId) => {\n  const token = localStorage.getItem('token');\n  try {\n    await axios.delete(`http://192.168.0.18:8081/folder/delete/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n  } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\nconst deleteFile = async (fileName) => {\n  const token = localStorage.getItem('token');\n  try {\n    await axios.delete(`http://192.168.0.18:8081/file/delete`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        fileName: fileName,\n        folderId: currentFolderId.value\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n  } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst uploadFiles = async () => {\n    const filesToUpload = selectedFiles.value.files;\n\n\n    if (!filesToUpload || filesToUpload.length === 0) return;\n\n    const formData = new FormData();    \n    for (let i = 0; i < filesToUpload.length; i++) {\n        formData.append(\"files\", filesToUpload[i]);\n        console.log(filesToUpload[i]);\n    }\n    formData.append(\"folderId\", currentFolderId.value);\n    console.log(formData);\n\n    const token = localStorage.getItem('token');\n\n    try {\n        await axios.post('http://192.168.0.18:8081/file/upload', formData, {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            }\n        });\n        fetchFolderItems(currentFolderId.value);\n    } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst createFolder = async () => {\n    if (!newFolderName.value) return;\n\n    const token = localStorage.getItem('token');\n\n    try {\n        await axios.post('http://192.168.0.18:8081/folder/create', {\n            name: newFolderName.value,\n            folderId: currentFolderId.value\n        }, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        fetchFolderItems(currentFolderId.value);\n    } catch (error) {\n      console.error(\"Error fetching folder items:\", error);\n      showErrorPopup(error);\n    }\n};\n\nconst initiateMove = () => {\n  fetchMainFolderForMove();\n  isMoving.value = true;\n  moveModalVisible.value = true;\n};\n\nconst confirmMove = async () => {\n  if (!selectedItems.value.length || !targetFolderId.value) {\n    console.error(\"No items selected or target folder not set for move!\");\n    return;\n  }\n  const filesToMove = selectedItems.value.join(',');\n\n  const token = localStorage.getItem('token');\n\n  try {\n    await axios.put('http://192.168.0.18:8081/file/move', null, {\n      params: {\n        files: filesToMove,\n        currentFolder: currentFolderId.value,\n        newFolder: targetFolderId.value\n      },\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    fetchFolderItems(currentFolderId.value);\n    isMoving.value = false;\n    moveModalVisible.value = false;\n  } catch (error) {\n      console.error(\"Error moving files:\", error);\n      showErrorPopup(error);\n  }\n};\n\n\nconst setTargetFolder = (folderId) => {\n  targetFolderId.value = folderId;\n  console.log(targetFolderId);\n};\nconst fetchMainFolderForMove = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('http://192.168.0.18:8081/folder/all', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    });\n\n    // Extract all folders from the returned data\n    let allFolders = [];\n    for (let key in response.data) {\n      allFolders = allFolders.concat(response.data[key].filter(item => item.fileType === 'FOLDER'));\n    }\n    \n    folderItems.value = allFolders;\n    console.log(allFolders);\n    \n  } catch (error) {\n    console.error(\"Error fetching main folder for move:\", error);\n    showErrorPopup(error);\n  }\n};\nconst fetchFolderItemsForMove = async (folderId) => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get(`http://192.168.0.18:8081/folder/files/${folderId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    // Filter only the folders.\n    folderItems.value = response.data[Object.keys(response.data)[0]].filter(item => item.fileType === 'FOLDER');\n  } catch (error) {\n    console.error(\"Error fetching folder items for move:\", error);\n    showErrorPopup(error);\n  }\n};\n\nconst cancelMove = () => {\n  moveModalVisible.value = false;\n  isMoving.value = false;\n  selectedItems.value = [];\n  targetFolderId.value = '';\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.home-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    max-width: 1000px;\n    margin: 0 auto;\n    background-color: #f7f7f7;\n    border-radius: 8px;\n    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n\n    .item {\n        display: flex;\n        align-items: center;\n        width: 100%;\n        max-width: 500px;\n        background-color: #ffffff;\n        border: 1px solid #e0e0e0;\n        border-radius: 4px;\n        padding: 10px;\n        margin: 10px 0;\n        cursor: pointer;\n        transition: background-color 0.3s, box-shadow 0.3s;\n\n        &:hover {\n            background-color: #f5f5f5;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        }\n\n        .folder-text,\n        .file-text {\n            font-size: 1.2em;\n            font-weight: 600;\n            margin-right: 15px;\n        }\n\n        .folder-text {\n            color: red;\n        }\n\n        .file-text {\n            color: blue;\n        }\n\n        button {\n            margin-left: auto;\n            padding: 5px 10px;\n            background-color: #4CAF50;\n            color: white;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s;\n\n            &:hover {\n                background-color: #45a049;\n            }\n        }\n    }\n\n    input[type=\"file\"],\n    input[type=\"text\"] {\n        margin-top: 15px;\n        padding: 10px;\n        border: 1px solid #dcdcdc;\n        border-radius: 4px;\n        outline: none;\n\n        &:focus {\n            border-color: #aaa;\n        }\n    }\n\n    button {\n        margin-top: 15px;\n        padding: 10px 15px;\n        background-color: #333;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        cursor: pointer;\n        transition: background-color 0.3s;\n\n        &:hover {\n            background-color: #555;\n        }\n    }\n\n    // Move Modal Styles\n    .move-modal {\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      padding: 20px;\n      background-color: white;\n      border: 1px solid #dcdcdc;\n      border-radius: 8px;\n      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n      z-index: 1000;\n      max-width: 400px;\n\n      h3 {\n        margin-bottom: 15px;\n      }\n\n      .folder-option {\n        padding: 10px;\n        border: 1px solid #dcdcdc;\n        border-radius: 4px;\n        margin-bottom: 10px;\n        cursor: pointer;\n        transition: background-color 0.2s;\n\n        &:hover {\n          background-color: #f5f5f5;\n        }\n      }\n    }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}